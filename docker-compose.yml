version: "3.9"

volumes:
  auth-data:
  user-data:
  gateway-data:
  finance-data:

services:
  finance-postgres-sql:
    depends_on:
      - kafka
      - gateway-service
    image: postgres:alpine
    volumes:
      - finance-data:/var/lib/postgresql/data
    env_file:
      - ./ov-fma-finance/.env.postgres
    ports:
      - "5433:5432"
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == database
      restart_policy:
        condition: on-failure

  user-postgres-sql:
    depends_on:
      - kafka
      - gateway-service
    image: postgres:alpine
    volumes:
      - user-data:/var/lib/postgresql/data
    env_file:
      - ./ov-fma-user/.env.postgres
    ports:
      - "5434:5432"
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == database
      restart_policy:
        condition: on-failure

  auth-postgres-sql:
    depends_on:
      - kafka
      - gateway-service
    image: postgres:alpine
    volumes:
      - auth-data:/var/lib/postgresql/data
    env_file:
      - ./ov-fma-auth/.env.postgres
    ports:
      - "5435:5432"
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == database
      restart_policy:
        condition: on-failure

  finance-service:
    depends_on:
      - finance-postgres-sql
      - kafka
      - gateway-service
    build:
      context: ./ov-fma-finance
      dockerfile: .dockerfile
    image: jotabr092/ov-fma-finance
    env_file:
      - ./ov-fma-finance/.env
      - ./ov-fma-finance/.env.postgres
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.hostname != database
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
    ports:
      - "8083:8080"
    networks:
      - app-network

  auth-service:
    depends_on:
      - auth-postgres-sql
      - kafka
      - gateway-service
    build:
      context: ./ov-fma-auth
      dockerfile: .dockerfile
    image: jotabr092/ov-fma-auth
    env_file:
      - ./ov-fma-auth/.env
      - ./ov-fma-auth/.env.postgres
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.hostname != database
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
    ports:
      - "8082:8080"
    networks:
      - app-network

  user-service:
    depends_on:
      - user-postgres-sql
      - kafka
      - gateway-service
    build:
      context: ./ov-fma-user
      dockerfile: .dockerfile
    image: jotabr092/ov-fma-user
    env_file:
      - ./ov-fma-user/.env
      - ./ov-fma-user/.env.postgres
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.hostname != database
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
    ports:
      - "8081:8080"
    networks:
      - app-network

  gateway-service:
    depends_on:
      - kafka
    build:
      context: ./ov-fma-gateway
      dockerfile: .dockerfile
    image: jotabr092/ov-fma-gateway
    env_file:
      - ./ov-fma-gateway/.env
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.hostname != database
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
    ports:
      - "8080:8080"
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.hostname != database
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.hostname != database
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
    ports:
      - "9092:9092"
    networks:
      - app-network

networks:
  app-network:
    driver: overlay
