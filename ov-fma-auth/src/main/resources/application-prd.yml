server:
  address: 0.0.0.0
  port: 8082

spring:
  kafka:
    bootstrap-servers: kafka-1:9092
    consumer:
      group-id: io.github.jotabrc
      client-id: "${HOSTNAME}"
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  #      properties:
  #        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
  #        spring.deserializer.value.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
  #        spring.json.trusted.packages: "*"
  #        spring.json.value.default.type: package.CustomDto
  redis:
    host: redis-cache
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
  cache:
    type: redis
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    show-sql: true
    open-in-view: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true

logging:
  level:
    org:
      springframework:
        security: DEBUG
        web: DEBUG
        servlet:
          DispatcherServlet: DEBUG